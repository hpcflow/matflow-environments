name: release-conda-pack-env
on:
  workflow_dispatch:
    inputs: 
      environment:
        type: choice
        required: true
        description: Choose which environment to conda-pack
        options:
          - damask_parse_env
          - damask_env
          - dream3d_env
          - formable_env
          - matflow_env
          - matflow_full_env
      lock:
        description: "Generate a lock file?"
        required: true
        type: boolean
        default: true
      lock-separate-windows:
        description: "Expect a separate environment_windows.yaml when locking for Windows?"
        required: true
        type: boolean
        default: false
      lock_kind:
        type: choice
        description: "Which type of conda lock file to output"
        required: true
        default: env
        options:
          - lock
          - explicit
          - env
      pack_linux:
        description: "Build a packed env for Linux?"
        required: true
        type: boolean
        default: false
      pack_macos:
        description: "Build a packed env for macOS?"
        required: true
        type: boolean
        default: false
      pack_macos_arm:
        description: "Build a packed env for macOS (Arm)?"
        required: true
        type: boolean
        default: false
      pack_windows:
        description: "Build a packed env for Windows?"
        required: true
        type: boolean
        default: false
            
jobs:
  conda-lock:
    if: github.event.inputs.lock == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    container:  
      image: ghcr.io/hpcflow/centos7-micromamba:latest
    steps:
      - uses: actions/checkout@v3

      - name: Run conda-lock (all platforms)
        if: ${{ github.event.inputs.lock-separate-windows == 'false' }}
        run: |
          micromamba --root-prefix /root/micromamba run -n base_env \
           conda-lock lock \
           --platform linux-64 \
           --platform osx-64 \
           --platform osx-arm64 \
           --platform win-64 \
           --file ${{ github.event.inputs.environment }}/environment.yaml \
           --lockfile ${{ github.event.inputs.environment }}-conda-lock.yaml \
           --kind ${{ github.event.inputs.lock_kind }}
      
      - name: Run conda-lock (Linux, MacOS)
        if: ${{ github.event.inputs.lock-separate-windows == 'true' }}
        run: |
          micromamba --root-prefix /root/micromamba run -n base_env \
          conda-lock lock \
          --platform linux-64 \
          --platform osx-64 \
          --platform osx-arm64 \
          --file ${{ github.event.inputs.environment }}/environment.yaml \
          --lockfile ${{ github.event.inputs.environment }}-conda-lock-posix.yaml \
          --kind ${{ github.event.inputs.lock_kind }}

      - name: Run conda-lock (Windows)
        if: ${{ github.event.inputs.lock-separate-windows == 'true' }}
        run: |
          micromamba --root-prefix /root/micromamba run -n base_env \
          conda-lock lock \
          --platform win-64 \
          --file ${{ github.event.inputs.environment }}/environment_windows.yaml \
          --lockfile ${{ github.event.inputs.environment }}-conda-lock-windows.yaml \
          --kind ${{ github.event.inputs.lock_kind }}
      
      - name: Upload conda-lock file (all platforms)
        if: ${{ github.event.inputs.lock-separate-windows == 'false' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda.lock.yaml
          path: ${{ github.event.inputs.environment }}-conda.lock.yaml
      
      - name: Upload conda-lock file (Linux, MacOS)
        if: ${{ github.event.inputs.lock-separate-windows == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda-posix.lock.yaml
          path: ${{ github.event.inputs.environment }}-conda-posix.lock.yaml

      - name: Upload conda-lock file (Windows)
        if: ${{ github.event.inputs.lock-separate-windows == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda-windows.lock.yaml
          path: ${{ github.event.inputs.environment }}-conda-windows.lock.yaml

  conda-pack-linux:
    if: github.event.inputs.pack_linux == 'true'
    needs: [conda-lock]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    container:  
      image: ghcr.io/hpcflow/centos7-micromamba:latest
    steps:
      - name: Download conda-lock file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Create the environment
        run: |
          micromamba --root-prefix /root/micromamba create --name ${{ github.event.inputs.environment }}-linux --file ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Pack the environment
        run: |          
          micromamba --root-prefix /root/micromamba run -n base_env conda-pack --prefix /root/micromamba/envs/${{ github.event.inputs.environment }}-linux
      - name: Upload conda-packed environment 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-linux.tar.gz
          path: ${{ github.event.inputs.environment }}-linux.tar.gz
    
  conda-pack-windows:
    if: github.event.inputs.pack_windows == 'true'
    needs: [conda-lock]
    runs-on: windows-latest
    steps:
      - name: Download conda-lock file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Download micromamba executable
        run: |
          Invoke-WebRequest -UseBasicParsing https://github.com/mamba-org/micromamba-releases/releases/latest/download/micromamba-win-64 -OutFile micromamba-win-64.exe
      - name:  Create a base environment including conda-pack
        run: |
          .\micromamba-win-64.exe create -y --name base_env -c conda-forge python conda-pack conda-lock
      - name: Create the environment
        run: |
          .\micromamba-win-64.exe create -y --name ${{ github.event.inputs.environment }}-win --file ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Pack the environment
        run: |
          .\micromamba-win-64.exe run --name base_env conda-pack --prefix $HOME\micromamba\envs\${{ github.event.inputs.environment }}-win
      - name: Upload conda-packed environment 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-win.tar.gz
          path: ${{ github.event.inputs.environment }}-win.tar.gz

  conda-pack-macos:
    if: github.event.inputs.pack_macos == 'true'
    needs: [conda-lock]
    runs-on: macos-latest
    steps:
      - name: Download conda-lock file
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Download and extract micromamba executable
        run: |
          curl -Ls https://micro.mamba.pm/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
      - name:  Create a base environment including conda-pack
        run: |
          ./bin/micromamba create -y --name base_env -c conda-forge python conda-pack conda-lock
      - name: Create the environment
        run: |
          ./bin/micromamba create -y --name ${{ github.event.inputs.environment }}-macos --file ${{ github.event.inputs.environment }}-conda-lock.yaml
      - name: Pack the environment
        run: |
          ./bin/micromamba run --name base_env conda-pack --name ${{ github.event.inputs.environment }}-macos
      - name: Upload conda-packed environment 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment }}-macos.tar.gz
          path: ${{ github.event.inputs.environment }}-macos.tar.gz
